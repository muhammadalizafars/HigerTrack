@{
    ViewData["Title"] = "User Page";
}

<head>
    <link rel="stylesheet" href="~/css/home.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD4jqcen5Xqrgck4V73aL6VepyKp2_wK1U&callback=initMap&loading=async"
        async></script>
</head>

<div class="main-content">
    <div id="map"></div>

    <div class="title-box">
        <i class="bi bi-person-fill me-2"></i> Data Marker User
    </div>

    <div class="border">
        <div class="custom-table-container">
            <div class="search-add-container">
                <div class="show-entries">
                    <label>
                        Show
                        <select id="entriesSelect" class="form-select form-select-sm d-inline-block"
                            style="width: auto;">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                        entries
                    </label>
                </div>

                <div class="search-add-actions d-flex gap-2 flex-wrap">
                    <div class="search-box d-flex gap-2">
                        <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="Cari..."
                            style="width: 200px;">
                        <button class="btn btn-primary btn-sm" id="btnSearch">
                            <i class="bi bi-search me-1"></i> Cari
                        </button>
                    </div>

                    <!-- Tombol Tambah -->
                    <div class="tambah-box">
                        <button class="btn btn-success btn-sm w-100" id="btnTambahData">
                            <i class="bi bi-plus-circle me-1"></i> Tambah Marker
                        </button>
                    </div>
                </div>

                <div class="table-responsive mt-3">
                    <table class="custom-table" id="markerTable">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Username</th>
                                <th>Point</th>
                                <th>Latitude</th>
                                <th>Longitude</th>
                                <th>Foto</th>
                                <th>Deskripsi</th>
                                <th>Aksi</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <div class="pagination-container mt-3"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Tambah -->
<div class="modal fade" id="addModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form onsubmit="submitAddForm(event)">
                <div class="modal-header">
                    <h5 class="modal-title">Tambah Marker</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Judul</label>
                        <input type="text" class="form-control" id="add-title" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Deskripsi</label>
                        <textarea class="form-control" id="add-desc" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Latitude</label>
                        <input type="text" class="form-control" id="add-lat" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Longitude</label>
                        <input type="text" class="form-control" id="add-lng" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Gambar</label>
                        <input type="file" class="form-control" id="add-image" accept="image/*" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Simpan</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="modalsContainer"></div>

<script>
    let markers = [];
    let map;

    function initMap() {
        var center = { lat: -6.914744, lng: 107.60981 };
        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 10,
            center: center,
        });
        loadMarkers();
    }

    let currentPage = 1;
    let pageSize = 10;

    document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("entriesSelect").addEventListener("change", function () {
            pageSize = parseInt(this.value);
            currentPage = 1;
            loadMarkers();
        });

        document.getElementById("btnSearch").addEventListener("click", function () {
            currentPage = 1;
            loadMarkers();
        });
    });

    async function loadMarkers() {
        const searchInput = document.getElementById("searchInput").value.trim();
        const url = new URL("/api/MapPoints", window.location.origin);

        if (searchInput !== "") {
            if (!isNaN(searchInput)) {
                url.searchParams.append("id", searchInput);
            } else {
                url.searchParams.append("search", searchInput);
            }
        }

        url.searchParams.append("page", currentPage);
        url.searchParams.append("pageSize", pageSize);

        const response = await fetch(url, { credentials: "include" });
        const result = await response.json();

        renderMarkers(result.data);
        renderPagination(result.currentPage, result.totalPages);
    }

    function renderMarkers(data) {
        const tbody = document.querySelector("#markerTable tbody");
        const modalsContainer = document.getElementById("modalsContainer");
        tbody.innerHTML = "";
        modalsContainer.innerHTML = "";

        data.forEach((item, index) => {
            const no = (currentPage - 1) * pageSize + index + 1;
            const imageTag = item.imageUrl ? `<img src="${item.imageUrl}" style="max-width:60px;max-height:60px;" />` : "";
            const modalId = `editModal-${item.id}`;

            const row = `
                <tr>
                    <td>${no}</td>
                    <td>${item.createdUserName ?? "-"}</td>
                    <td>${item.title}</td>
                    <td>${item.latitude}</td>
                    <td>${item.longitude}</td>
                    <td>${imageTag}</td>
                    <td>${item.description}</td>
                    <td>
                        <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#${modalId}">Edit</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteMarker(${item.id})">Hapus</button>
                    </td>
                </tr>`;

            const modal = `
                <div class="modal fade" id="${modalId}" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form onsubmit="submitEditForm(event, ${item.id})">
                                <div class="modal-header">
                                    <h5 class="modal-title">Edit Marker</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label class="form-label">Judul</label>
                                        <input type="text" class="form-control" id="edit-title-${item.id}" value="${item.title}" required />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Deskripsi</label>
                                        <textarea class="form-control" id="edit-desc-${item.id}" required>${item.description}</textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Latitude</label>
                                        <input type="text" class="form-control" id="edit-lat-${item.id}" value="${item.latitude}" required />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Longitude</label>
                                        <input type="text" class="form-control" id="edit-lng-${item.id}" value="${item.longitude}" required />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Gambar (opsional)</label>
                                        <input type="file" class="form-control" id="edit-image-${item.id}" accept="image/*" />
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-success">Simpan</button>
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>`;

            tbody.insertAdjacentHTML("beforeend", row);
            modalsContainer.insertAdjacentHTML("beforeend", modal);
        });
    }

    function renderPagination(current, total) {
        let html = `<div class="d-flex justify-content-between align-items-center mt-3">`;
        html += `<div>Halaman ${current} dari ${total}</div>`;
        html += `<div class="btn-group">`;

        if (current > 1) {
            html += `<button class="btn btn-sm btn-outline-primary" onclick="goToPage(${current - 1})">← Prev</button>`;
        }

        if (current < total) {
            html += `<button class="btn btn-sm btn-outline-primary" onclick="goToPage(${current + 1})">Next →</button>`;
        }

        html += `</div></div>`;

        const container = document.querySelector(".pagination-container");
        if (container) container.innerHTML = html;
    }

    function goToPage(page) {
        currentPage = page;
        loadMarkers();
    }

    async function submitAddForm(e) {
        e.preventDefault();

        const formData = new FormData();
        formData.append("Title", document.getElementById("add-title").value);
        formData.append("Description", document.getElementById("add-desc").value);
        formData.append("Latitude", document.getElementById("add-lat").value);
        formData.append("Longitude", document.getElementById("add-lng").value);

        const image = document.getElementById("add-image").files[0];
        if (image) formData.append("Image", image);

        const response = await fetch("/api/MapPoints", {
            method: "POST",
            body: formData,
            credentials: "include"
        });

        if (response.ok) {
            alert("Berhasil menambahkan marker.");
            location.reload();
        } else {
            const err = await response.text();
            alert("Gagal menambahkan marker: " + err);
        }
    }

    async function submitEditForm(e, id) {
        e.preventDefault();

        const formData = new FormData();
        formData.append("Title", document.getElementById(`edit-title-${id}`).value);
        formData.append("Description", document.getElementById(`edit-desc-${id}`).value);
        formData.append("Latitude", document.getElementById(`edit-lat-${id}`).value);
        formData.append("Longitude", document.getElementById(`edit-lng-${id}`).value);

        const image = document.getElementById(`edit-image-${id}`).files[0];
        if (image) formData.append("Image", image);

        try {
            const response = await fetch(`/api/MapPoints/${id}`, {
                method: "PUT",
                body: formData,
                credentials: "include"
            });

            if (response.ok) {
                alert("Marker berhasil diperbarui.");

                // ✅ TUTUP MODAL
                const modalEl = document.getElementById(`editModal-${id}`);
                const modalInstance = bootstrap.Modal.getInstance(modalEl);
                if (modalInstance) modalInstance.hide();

                // ✅ HAPUS BACKDROP MANUAL
                document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());

                // ✅ REFRESH TABEL SAJA
                loadMarkers();
            } else {
                const err = await response.text();
                alert("Gagal memperbarui marker: " + err);
            }
        } catch (err) {
            alert("Terjadi kesalahan jaringan.");
        }

        return false;
    }



    async function deleteMarker(id) {
        if (!confirm("Yakin ingin menghapus marker ini?")) return;

        const response = await fetch(`/api/MapPoints/${id}`, {
            method: "DELETE",
            credentials: "include"
        });

        if (response.ok) {
            alert("Berhasil menghapus marker.");
            loadMarkers();
        } else {
            const err = await response.text();
            alert("Gagal menghapus marker: " + err);
        }
    }

    function renderPagination(current, total) {
        let html = `<nav aria-label="Page navigation">`;
        html += `<ul class="pagination justify-content-center">`;

        // Tombol Previous
        if (current > 1) {
            html += `<li class="page-item">
                    <button class="page-link" onclick="goToPage(${current - 1})">Previous</button>
                 </li>`;
        } else {
            html += `<li class="page-item disabled">
                    <span class="page-link">Previous</span>
                 </li>`;
        }

        // Nomor halaman
        for (let i = 1; i <= total; i++) {
            if (i === current) {
                html += `<li class="page-item active" aria-current="page">
                        <span class="page-link">${i}</span>
                     </li>`;
            } else {
                html += `<li class="page-item">
                        <button class="page-link" onclick="goToPage(${i})">${i}</button>
                     </li>`;
            }
        }

        // Tombol Next
        if (current < total) {
            html += `<li class="page-item">
                    <button class="page-link" onclick="goToPage(${current + 1})">Next</button>
                 </li>`;
        } else {
            html += `<li class="page-item disabled">
                    <span class="page-link">Next</span>
                 </li>`;
        }

        html += `</ul></nav>`;

        const container = document.querySelector(".pagination-container");
        if (container) container.innerHTML = html;
    }


    function goToPage(page) {
        currentPage = page;
        loadMarkers();
    }
</script>
